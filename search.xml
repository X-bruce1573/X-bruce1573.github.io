<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于VS Code搭建轻量便捷的C++开发环境</title>
      <link href="2021/05/08/da-jian-qing-liang-bian-jie-de-c-kai-fa-huan-jing/"/>
      <url>2021/05/08/da-jian-qing-liang-bian-jie-de-c-kai-fa-huan-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="基于VS-Code-搭建轻量便捷的C-开发环境"><a href="#基于VS-Code-搭建轻量便捷的C-开发环境" class="headerlink" title="基于VS Code 搭建轻量便捷的C++开发环境"></a>基于VS Code 搭建轻量便捷的C++开发环境</h1><p>最近正在学习C++,一款强大的编译器当然是必不可少的啦！前后试用了Dev-Cpp、Notepad++、 CodeBlocks之类的编译器，最后真的感觉 嗯！ VS Code，真香！ 既可以快速运行单文件的小练习，也可以配合Cmake开发工程 舒服的代码高亮和智能补全、快速跳转简直不要太好用！前期的摸索当中看了好多资料（网上很多称作是看一篇就够了，但感觉写的却非常模糊），当然也走了很多弯路，浪费了不少时间，综上，总结一下环境搭建流程，适合小白，亲测有效！</p><h2 id="一、明确目的、理清思路"><a href="#一、明确目的、理清思路" class="headerlink" title="一、明确目的、理清思路"></a>一、明确目的、理清思路</h2><p>首先明确一下VS Code只是一个代码编译器，能编译、调试、运行就完事了，可以理解为我们之前使用的DevC++增加了用户体验，替换了舒适手感就变为VS Code了，接下来是我们需要解决的完成的一些任务</p><ul><li><p>使用VS Code编译C++代码：需要安装编译器</p></li><li><p>使用VS Code可以编译、调试、运行程序：需要安装插件，且需要添加两个json为文件</p></li><li><p>若VS Code编译头文件库时报错：需要添加.h文件库的位置（==本人在这点踩坑了==）</p></li></ul><h2 id="二、具体步骤"><a href="#二、具体步骤" class="headerlink" title="二、具体步骤"></a>二、具体步骤</h2><h3 id="1、下载安装解决编译器问题"><a href="#1、下载安装解决编译器问题" class="headerlink" title="1、下载安装解决编译器问题"></a>1、下载安装解决编译器问题</h3><ul><li>首先下载VS Code(官网即可)，正常安装，遇到打勾的全选即可</li></ul><ul><li><p>下载安装编译器，我这里使用的是ming-w64 ，ming-w64下载（c++的工具包） 官方：<a href="https://sourceforge.net/projects/mingw-w64/">https://sourceforge.net/projects/mingw-w64/</a></p><p><img src="C:\Users\晨风\AppData\Roaming\Typora\typora-user-images\image-20210507205904696.png" alt="image-20210507205904696"></p><p>==一定要下载该版本，否则没有bin文件，亲测==</p><p><img src="C:\Users\晨风\AppData\Roaming\Typora\typora-user-images\image-20210507205932157.png" alt="image-20210507205932157"></p><p>==路径是不可以有中文或空格的，可能会导致gdb无法正常工作没有办法debug放不了断点什么的了==</p><p>下载好VS Code之后需要把bin文件的路径添加到系统的PATH里面</p><p><img src="C:\Users\晨风\AppData\Roaming\Typora\typora-user-images\image-20210507205959304.png" alt="image-20210507205959304"></p><p>配置好之后输入cmd，输入 gcc -v 查看gcc版本即可如下图</p></li></ul><p><img src="C:\Users\晨风\AppData\Roaming\Typora\typora-user-images\image-20210507210015732.png" alt="image-20210507210015732"></p><h3 id="2、安装VS-Code插件"><a href="#2、安装VS-Code插件" class="headerlink" title="2、安装VS Code插件"></a>2、安装VS Code插件</h3><ul><li><p>下载安装完之后，VS Code是空的，打开VS Code装几个插件，你需要什么功能就去下载什么功能，可以理解为手机里的应用商店。</p><p><img src="C:\Users\晨风\AppData\Roaming\Typora\typora-user-images\image-20210507210217573.png" alt="image-20210507210217573"></p><p><img src="C:\Users\晨风\AppData\Roaming\Typora\typora-user-images\image-20210507210230808.png" alt="image-20210507210230808"></p></li></ul><ul><li>输入需要下载的插件，比如安装C/C++ ,Code  Runner就可以意见运行程序了，可以选择性的添加想要的插件</li></ul><h3 id="3、运行调试程序，配置文件"><a href="#3、运行调试程序，配置文件" class="headerlink" title="3、运行调试程序，配置文件"></a>3、运行调试程序，配置文件</h3><ul><li><p>接下来新建一个我们代码存放的文件夹（电脑上习惯的位置）用于存放代码，接下来配置好的调试环境，进队存放在这一个文件夹及文件夹的子目录里的程序作用</p><p>上面就是我在电脑里创建的一个用于存放.cpp文件的文件夹</p><p><img src="C:\Users\晨风\AppData\Roaming\Typora\typora-user-images\image-20210507210252726.png" alt="image-20210507210252726"></p></li><li><p>接下来配置文件让程序编译起来，在文件夹下新建.VS Code文件夹并新建两个<code>json</code>文件分别是<code>launch.json</code> 和<code>task.json </code></p><ul><li><code>launch.json</code> 配置启动的一些参数</li><li><code>task.json</code> 配置编译器的相关参数  可以用最新的c++编译器</li></ul></li></ul><p><img src="C:\Users\晨风\AppData\Roaming\Typora\typora-user-images\image-20210507210448412.png" alt="image-20210507210448412"></p><p><img src="C:\Users\晨风\AppData\Roaming\Typora\typora-user-images\image-20210507210624919.png" alt="image-20210507210624919"></p><p><code> "externalConsole": false,</code> <em>// 为true时使用单独的cmd窗口，与其它IDE一致；18年10月后设为false可调用VSC内置终端</em></p><p>  另外<code>shift +alt+f</code>   自动整理代码 （非常好用，强推）</p><h3 id="4、头文件报错怎么办"><a href="#4、头文件报错怎么办" class="headerlink" title="4、头文件报错怎么办"></a>4、头文件报错怎么办</h3><p>也就是我遇到的最头疼的问题，在我们VS Code代码写了一大半回过头时，就会发现</p><p><img src="C:\Users\晨风\AppData\Roaming\Typora\typora-user-images\image-20210507210814237.png" alt="image-20210507210814237"></p><p>what?库函数都找不到？这个问题也是纠缠我时间最长的问题，很多资料帖子都没有写的很清楚，但我认为应该是很多人遇到的问题吧。</p><p>经过不断查找、询问、试错之后我发现，VS Code找不到都文件的问题是由于windows下VS Code默认的编译器是微软的MSVC(Microsoft Visual Studio使用的编译器）的头文件路径，如果没有安装Microsoft Visual Studio肯定会因为炸不到头文件而报错的，所有我们要手动修改配置。</p><p>ctrl +shift +p ,”C/Cpp:Edit configurations”,生成c_cpp_properties.json文件如图，在这个文件里需要修改基础，如includePath和compilerPath：</p><p><img src="C:\Users\晨风\AppData\Roaming\Typora\typora-user-images\image-20210507210905889.png" alt="image-20210507210905889"></p><p>还要想添加其他的库，都可以用这样的方式进行添加，上面的配置完成之后，再回到你创建的.cpp文件，你就会发现不会报错了</p><p>基于VS Code 搭建轻量便捷的C++开发环境配置完毕，其实过程还是非常简单的，把我的经验记录分享给大家，加油！</p><p>Good  Luck   to   you!</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VS Code </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/04/14/hello-world/"/>
      <url>2021/04/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
